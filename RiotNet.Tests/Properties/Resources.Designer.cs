//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiotNet.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RiotNet.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;botMmEnabled&quot;: true,
        ///   &quot;id&quot;: 103,
        ///   &quot;rankedPlayEnabled&quot;: true,
        ///   &quot;botEnabled&quot;: true,
        ///   &quot;active&quot;: true,
        ///   &quot;freeToPlay&quot;: true
        ///}.
        /// </summary>
        internal static string SampleChampion {
            get {
                return ResourceManager.GetString("SampleChampion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///        &quot;fellowPlayers&quot;: [
        ///          {
        ///              &quot;championId&quot;: 412,
        ///              &quot;teamId&quot;: 200,
        ///              &quot;summonerId&quot;: 29743501
        ///          },
        ///          {
        ///              &quot;championId&quot;: 150,
        ///              &quot;teamId&quot;: 200,
        ///              &quot;summonerId&quot;: 28949950
        ///          },
        ///          {
        ///              &quot;championId&quot;: 76,
        ///              &quot;teamId&quot;: 100,
        ///              &quot;summonerId&quot;: 57421691
        ///          },
        ///          {
        ///              &quot;championId&quot;: 43,
        ///              &quot;teamId&quot;: 100,
        ///              &quot;summ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleGame {
            get {
                return ResourceManager.GetString("SampleGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;queue&quot;: &quot;RANKED_TEAM_5x5&quot;,
        ///   &quot;name&quot;: &quot;Galio&apos;s Brood&quot;,
        ///   &quot;participantId&quot;: &quot;35870943&quot;,
        ///   &quot;entries&quot;: [
        ///      {
        ///         &quot;leaguePoints&quot;: 2,
        ///         &quot;isFreshBlood&quot;: true,
        ///         &quot;isHotStreak&quot;: true,
        ///         &quot;division&quot;: &quot;I&quot;,
        ///         &quot;isInactive&quot;: true,
        ///         &quot;isVeteran&quot;: true,
        ///         &quot;losses&quot;: 11,
        ///         &quot;playerOrTeamName&quot;: &quot;ApeX R Gaming&quot;,
        ///         &quot;playerOrTeamId&quot;: &quot;TEAM-a77c7a20-7f0e-11e4-8c36-c81f66dd45c9&quot;,
        ///         &quot;wins&quot;: 36,
        ///         &quot;miniSeries&quot;: {
        ///           &quot;losses&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleLeague {
            get {
                return ResourceManager.GetString("SampleLeague", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;region&quot;: &quot;NA&quot;,
        ///   &quot;matchType&quot;: &quot;MATCHED_GAME&quot;,
        ///   &quot;matchCreation&quot;: 1436660796872,
        ///   &quot;timeline&quot;: {
        ///      &quot;frameInterval&quot;: 60000,
        ///      &quot;frames&quot;: [
        ///         {
        ///            &quot;timestamp&quot;: 200,
        ///            &quot;participantFrames&quot;: {
        ///               &quot;3&quot;: {
        ///                  &quot;currentGold&quot;: 475,
        ///                  &quot;position&quot;: {
        ///                     &quot;y&quot;: 293,
        ///                     &quot;x&quot;: 351
        ///                  },
        ///                  &quot;minionsKilled&quot;: 2,
        ///                  &quot;level&quot;: 1,
        ///                  &quot;jung [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleMatch {
            get {
                return ResourceManager.GetString("SampleMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///         &quot;timestamp&quot;: 1437700807871,
        ///         &quot;champion&quot;: 254,
        ///         &quot;queue&quot;: &quot;RANKED_TEAM_5x5&quot;,
        ///         &quot;season&quot;: &quot;SEASON2015&quot;,
        ///         &quot;matchId&quot;: 1896442090,
        ///         &quot;role&quot;: &quot;NONE&quot;,
        ///         &quot;platformId&quot;: &quot;NA1&quot;,
        ///         &quot;lane&quot;: &quot;JUNGLE&quot;
        ///      }.
        /// </summary>
        internal static string SampleMatchReference {
            get {
                return ResourceManager.GetString("SampleMatchReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;matchVersion&quot;: &quot;5.14.0.329&quot;,
        ///   &quot;region&quot;: &quot;NA&quot;,
        ///   &quot;mapId&quot;: 11,
        ///   &quot;season&quot;: &quot;SEASON2015&quot;,
        ///   &quot;queueType&quot;: &quot;RANKED_TEAM_5x5&quot;,
        ///   &quot;matchDuration&quot;: 3091,
        ///   &quot;matchCreation&quot;: 1437696529521,
        ///   &quot;matchType&quot;: &quot;MATCHED_GAME&quot;,
        ///   &quot;matchId&quot;: 1896376478,
        ///   &quot;participants&quot;: [{
        ///      &quot;masteries&quot;: [
        ///         {
        ///            &quot;rank&quot;: 2,
        ///            &quot;masteryId&quot;: 4211
        ///         },
        ///         {
        ///            &quot;rank&quot;: 2,
        ///            &quot;masteryId&quot;: 4213
        ///         },
        ///         {
        ///            &quot;rank&quot;: 1,
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleMatchSummary {
            get {
                return ResourceManager.GetString("SampleMatchSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///   &quot;region_tag&quot;: &quot;na1&quot;,
        ///   &quot;services&quot;: [
        ///      {
        ///         &quot;incidents&quot;: [{
        ///            &quot;id&quot;: 2740,
        ///            &quot;updates&quot;: [{
        ///               &quot;content&quot;: &quot;Skrill has been disabled while we investigate an issue causing this payment method to fail to grant Riot Points.&quot;,
        ///               &quot;id&quot;: 3182,
        ///               &quot;author&quot;: &quot;test&quot;,
        ///               &quot;updated_at&quot;: &quot;2015-07-19T02:23:43.000Z&quot;,
        ///               &quot;translations&quot;: [
        ///                  {
        ///                     &quot;content&quot;: &quot;Platební metodu Skrill jsme  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SampleShardStatus {
            get {
                return ResourceManager.GetString("SampleShardStatus", resourceCulture);
            }
        }
    }
}
